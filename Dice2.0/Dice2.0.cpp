#include <windows.h>
#include <iostream>
#include <stdlib.h>
#include <time.h>
using namespace std;

/* Оптимизация:
(!) проведя анализ мы решили, что нам нужно изначально броски помещать в цикл и выходить из него если есть победитель, а если нет победителя, то в цикле перебросить.
Берем цикл do_while, т.к. сперва мы все-таки бросим, и только если ничья, то перебросим. А перед фразой про ничью и переброску мы вставим броски пирата и корсара с дву-
мя switch (вместо 4-х). */

int main()
{
    SetConsoleOutputCP(1251);
    srand(time(NULL));
    cout << "----------------------------------------------------------Корсары! Игра в кости!-----------------------------------------------------------------" << endl;
    int cash = 0, bet = 0, strike_pc = 0, strike_player = 0;

    do
    {
        cout << "Пират: \"Внеси деньги на бочку!\" "; cin >> cash;
        if (cash < 0)cout << "Хаp! Карманы дырявые, нищее отребье!" << endl;
    } while (cash < 0);

    if (cash == 0)
        cout << "Хаp! Кошелек прохудился! Давай-ка проваливай!" << endl;
    else
    {
        do
        {
            system("cls");
            cout << "------Деньги на бочку!------" << endl;
            cout << "В мешочке осталось: " << cash << " пиастров!" << endl;

            do
            {
                cout << "Сколько ставишь? "; cin >> bet;
                if (bet < 0)cout << "Агрх! С баблом что худо..? Корабль ставишь?" << endl;
                if (bet > cash)cout << "Агрх, разрази меня гром! Жизнью решил/а расплатиться?" << endl;
            } while (bet<0 || bet>cash);

            if (bet == 0)
            {
                cout << "Агрх, крыса помойная! Учапывай давай отсюда!" << endl;
                break;
            }
            else
            {
                do
                {
                    strike_pc = rand() % 6 + 1;
                    strike_player = rand() % 6 + 1;
                    cout << "У пирата выпало: ";
                    Sleep(3000);
                    switch (strike_pc)
                    {
                    case 1:
                        cout << R"(
 _ _ _
|     |
|  *  |
|_ _ _|
)";
                        break;
                    case 2:
                        cout << R"(
 _ _ _
|   * |
|     |
|_*_ _|
)";
                        break;
                    case 3:
                        cout << R"(
 _ _ _
|   * |
|  *  |
|_*_ _|
)";
                        break;
                    case 4:
                        cout << R"(
 _ _ _
| * * |
|     |
|_*_*_|
)";
                        break;
                    case 5:
                        cout << R"(
 _ _ _
| * * |
|  *  |
|_*_*_|
)";
                        break;
                    case 6:
                        cout << R"(
 _ _ _
| * * |
| * * |
|_*_*_|
)";
                        break;

                    }
                    Sleep(3000);
                    cout << "\nУ корсара выпало: ";
                    Sleep(3000);
                    switch (strike_player)
                    {
                    case 1:
                        cout << R"(
 _ _ _
|     |
|  *  |
|_ _ _|
)";
                        break;
                    case 2:
                        cout << R"(
 _ _ _
|   * |
|     |
|_*_ _|
)";
                        break;
                    case 3:
                        cout << R"(
 _ _ _
|   * |
|  *  |
|_*_ _|
)";
                        break;
                    case 4:
                        cout << R"(
 _ _ _
| * * |
|     |
|_*_*_|
)";
                        break;
                    case 5:
                        cout << R"(
 _ _ _
| * * |
|  *  |
|_*_*_|
)";
                        break;
                    case 6:
                        cout << R"(
 _ _ _
| * * |
| * * |
|_*_*_|
)";
                        break;

                    }
                    Sleep(3000);

                    if (strike_pc == strike_player)cout << "\nАгрх, перекинем!\n" << endl;
                } while (strike_pc == strike_player);


                if (strike_pc > strike_player)
                {
                    cout << "\nВетер, хар, не в твои паруса дует!" << endl;
                    cash -= bet;
                    cout << "В мешочке осталось: " << cash << " пиастров!" << endl;
                }
                else
                {
                    cout << "\nВезет тебе чужеземец/ка!" << endl;
                    cash += bet;
                    cout << "В мешочке набралось: " << cash << " пиастров!" << endl;
                }
                if (cash == 0)
                {
                    cout << "Удача, сморю, не на твоей стороне чужестран(ец/ка)! Давай-ка проваливай!" << endl;
                    break;
                }
                system("pause");
            }
        } while (cash > 0);
    }
    Sleep(3000);
}
/* Что-то можно еще улучшить..
Для нашей игры у пирата, и у корсара одинаково пишутся броски, кубики, switch. Т.е. мы два раза выполним одни и те же операции. Если мы выполняем одни и те же операции
несколько раз, зная сколько будет повторений (у нас обязательно два броска), мы можем поместить броски в цикл, который будет выполнять два раза бросок кубика. Идеален
тут цикл for, т.к. выполнится столько раз, сколько нам нужно. Это объединение возможно лишь в том случае, когда у нас кубики рисуются одинаково для корсара, и для игро-
ка, а также когда значения на кубиках тоже генерируются одинаково (без подкрутки). Иначе объединить их не получится.
(!) только в абсолютно идентичных операциях возможно выполнение в цикле. Напишем Dice 3.0. */